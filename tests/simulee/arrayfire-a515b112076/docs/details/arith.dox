/**
\addtogroup arrayfire_func
@{

\defgroup arith_func_add add

\ingroup arith_mat

Addition of two inputs.



\defgroup arith_func_sub sub

\ingroup arith_mat

Subtract one input from another



\defgroup arith_func_mul mul

\ingroup arith_mat

Multiply two inputs element wise



\defgroup arith_func_div div

\ingroup arith_mat

Divide one input by another



\defgroup arith_func_shiftl bitshiftl

\ingroup arith_mat

Left shift an input



\defgroup arith_func_shiftr bitshiftr

\ingroup arith_mat

Right shift an input



\defgroup logic_func_lt lt

\ingroup logic_mat

Check if input is less than another



\defgroup logic_func_gt gt

\ingroup logic_mat

Check if input is greater than another



\defgroup logic_func_le le

\ingroup logic_mat

Check if input is less than or equal to another



\defgroup logic_func_ge ge

\ingroup logic_mat

Check if input is greater than or equal to another



\defgroup logic_func_eq eq

\ingroup logic_mat

Check if input two inputs are equal



\defgroup logic_func_neq neq

\ingroup logic_mat

Check if input two inputs are not equal



\defgroup logic_func_and and

\ingroup logic_mat

Logical and of two inputs



\defgroup logic_func_or or

\ingroup logic_mat

Logical or of two inputs



\defgroup logic_func_not not

\ingroup logic_mat

Logical not of an input



\defgroup logic_func_neg neg

\ingroup logic_mat

Negative of an input



\defgroup logic_func_bitand bitand

\ingroup logic_mat

Bitwise and operation of two inputs



\defgroup logic_func_bitor bitor

\ingroup logic_mat

Bitwise or operation of two inputs



\defgroup logic_func_bitxor bitxor

\ingroup logic_mat

Bitwise xor operation of two inputs



\defgroup numeric_func_min min

\ingroup numeric_mat

Minimum of two inputs.



\defgroup numeric_func_max max

\ingroup numeric_mat

Maximum of two inputs.



\defgroup numeric_func_rem rem

\ingroup numeric_mat

Remainder operation



\defgroup numeric_func_mod mod

\ingroup numeric_mat

Remainder operation



\defgroup numeric_func_abs abs

\ingroup numeric_mat

Absolute value



\defgroup numeric_func_round round

\ingroup numeric_mat

Round to nearest integer



\defgroup numeric_func_floor floor

\ingroup numeric_mat

Round to integer less than equal to current value



\defgroup numeric_func_ceil ceil

\ingroup numeric_mat

Round to integer greater than equal to current value



\defgroup numeric_func_hypot hypot

\ingroup numeric_mat

Hypotenuse of the two inputs



\defgroup trig_func_sin sin

\ingroup trig_mat

sin of input



\defgroup trig_func_cos cos

\ingroup trig_mat

cos of input



\defgroup trig_func_tan tan

\ingroup trig_mat

tan of input



\defgroup trig_func_asin asin

\ingroup trig_mat

arc sin of input



\defgroup trig_func_acos acos

\ingroup trig_mat

arc cos of input



\defgroup trig_func_atan atan

\ingroup trig_mat

arc tan of input



\defgroup hyper_func_sinh sinh

\ingroup hyper_mat

sinh of input



\defgroup hyper_func_cosh cosh

\ingroup hyper_mat

cosh of input



\defgroup hyper_func_tanh tanh

\ingroup hyper_mat

tanh of input



\defgroup hyper_func_asinh asinh

\ingroup hyper_mat

asinh of input



\defgroup hyper_func_acosh acosh

\ingroup hyper_mat

acosh of input



\defgroup hyper_func_atanh atanh

\ingroup hyper_mat

atanh of input



\defgroup complex_func_cplx complex

\ingroup complex_mat

create complex arrays



\defgroup complex_func_real real

\ingroup complex_mat

Get real part of complex arrays



\defgroup complex_func_imag imag

\ingroup complex_mat

Get imaginary part of complex arrays



\defgroup complex_func_conjg conjg

\ingroup complex_mat

Get complex conjugate



\defgroup explog_func_pow pow

\ingroup explog_mat

Raise an array to a power




\defgroup explog_func_exp exp

\ingroup explog_mat

Exponential of input




\defgroup explog_func_expm1 expm1

\ingroup explog_mat

Exponential of input - 1



\defgroup explog_func_erf erf

\ingroup explog_mat

Error function value




\defgroup explog_func_erfc erfc

\ingroup explog_mat

Complementary Error function value



\defgroup explog_func_log log

\ingroup explog_mat

Natural logarithm



\defgroup explog_func_log1p log1p

\ingroup explog_mat

Natural logarithm of (1 + in)



\defgroup explog_func_log10 log10

\ingroup explog_mat

logarithm base 10



\defgroup explog_func_sqrt sqrt

\ingroup explog_mat

Square root of input arrays



\defgroup explog_func_cbrt cbrt

\ingroup explog_mat

Cube root of input arrays



\defgroup explog_func_tgamma tgamma

\ingroup explog_mat

Gamma function



\defgroup explog_func_lgamma lgamma

\ingroup explog_mat

Logarithm of absolute values of Gamma function



\defgroup helper_func_iszero iszero

\ingroup helper_mat

Check if values are zero



\defgroup helper_func_isinf isinf

\ingroup helper_mat

Check if values are infinite



\defgroup helper_func_isNan isNan

\ingroup helper_mat

Check if values are Nan



\defgroup helper_func_cast cast

\ingroup helper_mat

Casting inputs from one type to another


@}
*/
